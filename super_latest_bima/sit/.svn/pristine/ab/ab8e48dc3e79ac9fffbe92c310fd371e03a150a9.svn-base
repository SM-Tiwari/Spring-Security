package id.gnvsolution.d3.api.component.file;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;
import com.jcraft.jsch.UserInfo;

import id.gnvsolution.d3.api.Constants;
import id.gnvsolution.d3.api.service.AppConfigService;

import java.io.IOException;
import java.io.InputStream;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Created by aswzen
 * on 04/09/2018.
 */
@Component
@Transactional
public class SftpClient {

    Session session = null;
    Channel channel = null;
    ChannelSftp channelSftp = null;
 
    @Autowired
	private AppConfigService applicationConfigurationService;
    
    public void openSession() throws Exception {
         
        JSch jsch = new JSch();
        //session = jsch.getSession(Constants.PROFILE_PICTURE_SFTP_USERNAME, Constants.PROFILE_PICTURE_SFTP_HOST, Integer.parseInt(Constants.PROFILE_PICTURE_SFTP_PORT));*/
        session = jsch.getSession(applicationConfigurationService.get("SFTP.USERNAME", "sysadm").toString(),applicationConfigurationService.get("SFTP.HOST", "sysadm").toString(), Integer.parseInt(applicationConfigurationService.get("SFTP.PORT", "sysadm").toString()));
        String pass = Constants.PROFILE_PICTURE_SFTP_PASSWORD;
        if("NULL".equalsIgnoreCase(pass)){
            /*session.setConfig("PreferredAuthentications", "publickey");*/
        	/*session.setConfig(
        		    "PreferredAuthentications", 
        		    "publickey,keyboard-interactive,password");
            jsch.setKnownHosts("/home/odp/.ssh/known_hosts");*/
          // jsch.addIdentity("/home/odp/.ssh/id_rsa");
        } else {
            session.setPassword(pass);
        }
        
        session.setConfig("StrictHostKeyChecking", "no");
        session.connect();
    }
    
    public void sendFile(InputStream inputStream, String fileName) throws JSchException, SftpException {
        channel = session.openChannel("sftp");
        channel.connect();
        channelSftp = (ChannelSftp) channel;
        channelSftp.cd(applicationConfigurationService.get("PROFILE.UPLOAD_URL", "sysadm").toString());
        channelSftp.put(inputStream, fileName);
        channel.disconnect();
    }
    
    public void removeFile(String fileName) throws JSchException, SftpException{
        channel = session.openChannel("sftp");
        channel.connect();
        channelSftp = (ChannelSftp) channel;
        channelSftp.cd(applicationConfigurationService.get("PROFILE.UPLOAD_URL", "sysadm").toString());
        channelSftp.rm(fileName);
        channel.disconnect();
    }
 
    public void closeSession() throws IOException {
        session.disconnect();
    }
}
