package id.gnvsolution.d3.api.service.impl;

import id.gnvsolution.d3.api.dao.BaseDao;
import id.gnvsolution.d3.api.dto.response.MenuDto;
import id.gnvsolution.d3.api.model.MenuCategory;
import id.gnvsolution.d3.api.service.MenuService;

import org.hibernate.Query;
import org.hibernate.SessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * Created by rips on 4/23/17.
 */
@Service
@Transactional()
public class MenuServiceImpl implements MenuService {
	
	public static Logger logger = LoggerFactory.getLogger(MenuServiceImpl.class);

    @Autowired
    @Qualifier("sessionFactory_Def")
    private SessionFactory sessionFactoryDef;

    @Override
    public List<MenuDto> getMenu() {
    	logger.info("#getMenu-------------getting data from MenuCategory ");
        BaseDao<MenuCategory> menuCategoryDao = new BaseDao<>(sessionFactoryDef, MenuCategory.class);
        List<MenuDto> results = new ArrayList<>();
        menuCategoryDao.find("isActive = :isActive order by order", new HashMap<String, Object>() {{
            put("isActive", true);
        }}).forEach(menuCategory -> results.add(new MenuDto(menuCategory.getCategoryId(), menuCategory.getName(), menuCategory.getIconImage(), menuCategory.iconImageSelected())));
        return results;
    }
    

	@Override
	public String getCategoryIdBySubCategoryId(String subCategoryId) {
		
		logger.info("#getCategoryIdBySubCategoryId-------------subCategoryId::::: ", subCategoryId);

		Query query=sessionFactoryDef.getCurrentSession().createSQLQuery("select CATEGORY_ID from SUB_MENU_CATEGORY where SUB_MENU_CATEGORY_ID=:subCategoryId");
		query.setParameter("subCategoryId", subCategoryId);
		String categoryId=query.uniqueResult().toString();
    	return categoryId;
		
	}

}
