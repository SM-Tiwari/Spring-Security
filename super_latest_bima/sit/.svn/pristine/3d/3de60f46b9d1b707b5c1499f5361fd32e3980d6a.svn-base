package id.gnvsolution.d3.api.model;

import javax.persistence.*;
import java.sql.Timestamp;
import java.util.Collection;

/**
 * Created by rips on 4/15/17.
 */
@Entity
@Table(name = "TRX_SUBSCRIBER_ETOPUP")
public class TrxSubscriberEtopup {
    private String transactionId;
    private String subscriberMsisdn;
    private String paymentMethodCode;
    private Timestamp transactionDatetime;
    private String msisdn;
    private long evoucherAmount;
    private long transactionStatus;
    private Collection<Notification> notificationsByTransactionId;
    private Subscriber subscriberBySubscriberMsisdn;
    private PaymentMethod paymentMethodByPaymentMethodCode;
    private String interfaceType;
    
    @Basic
    @Column(name = "INTERFACE_TYPE", nullable = false, length = 15)
    public String getInterfaceType() {
		return interfaceType;
	}

	public void setInterfaceType(String interfaceType) {
		this.interfaceType = interfaceType;
	}

	@Id
    @Column(name = "TRANSACTION_ID", nullable = false, length = 50)
    public String getTransactionId() {
        return transactionId;
    }

    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }

    @Basic
    @Column(name = "SUBSCRIBER_MSISDN", nullable = false, length = 15)
    public String getSubscriberMsisdn() {
        return subscriberMsisdn;
    }

    public void setSubscriberMsisdn(String subscriberMsisdn) {
        this.subscriberMsisdn = subscriberMsisdn;
    }

    @Basic
    @Column(name = "PAYMENT_METHOD_CODE", nullable = false, length = 2)
    public String getPaymentMethodCode() {
        return paymentMethodCode;
    }

    public void setPaymentMethodCode(String paymentMethodCode) {
        this.paymentMethodCode = paymentMethodCode;
    }

    @Basic
    @Column(name = "TRANSACTION_DATETIME", nullable = false)
    public Timestamp getTransactionDatetime() {
        return transactionDatetime;
    }

    public void setTransactionDatetime(Timestamp transactionDatetime) {
        this.transactionDatetime = transactionDatetime;
    }

    @Basic
    @Column(name = "MSISDN", nullable = false, length = 15)
    public String getMsisdn() {
        return msisdn;
    }

    public void setMsisdn(String msisdn) {
        this.msisdn = msisdn;
    }

    @Basic
    @Column(name = "EVOUCHER_AMOUNT", nullable = false, precision = 0)
    public long getEvoucherAmount() {
        return evoucherAmount;
    }

    public void setEvoucherAmount(long evoucherAmount) {
        this.evoucherAmount = evoucherAmount;
    }

    @Basic
    @Column(name = "TRANSACTION_STATUS", nullable = false, precision = 0)
    public long getTransactionStatus() {
        return transactionStatus;
    }

    public void setTransactionStatus(long transactionStatus) {
        this.transactionStatus = transactionStatus;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        TrxSubscriberEtopup that = (TrxSubscriberEtopup) o;

        if (evoucherAmount != that.evoucherAmount) return false;
        if (transactionStatus != that.transactionStatus) return false;
        if (transactionId != null ? !transactionId.equals(that.transactionId) : that.transactionId != null)
            return false;
        if (subscriberMsisdn != null ? !subscriberMsisdn.equals(that.subscriberMsisdn) : that.subscriberMsisdn != null)
            return false;
        if (paymentMethodCode != null ? !paymentMethodCode.equals(that.paymentMethodCode) : that.paymentMethodCode != null)
            return false;
        if (transactionDatetime != null ? !transactionDatetime.equals(that.transactionDatetime) : that.transactionDatetime != null)
            return false;
        if (msisdn != null ? !msisdn.equals(that.msisdn) : that.msisdn != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = transactionId != null ? transactionId.hashCode() : 0;
        result = 31 * result + (subscriberMsisdn != null ? subscriberMsisdn.hashCode() : 0);
        result = 31 * result + (paymentMethodCode != null ? paymentMethodCode.hashCode() : 0);
        result = 31 * result + (transactionDatetime != null ? transactionDatetime.hashCode() : 0);
        result = 31 * result + (msisdn != null ? msisdn.hashCode() : 0);
        result = 31 * result + (int) (evoucherAmount ^ (evoucherAmount >>> 32));
        result = 31 * result + (int) (transactionStatus ^ (transactionStatus >>> 32));
        return result;
    }

    @OneToMany(mappedBy = "trxSubscriberEtopupByTrxTransactionId")
    public Collection<Notification> getNotificationsByTransactionId() {
        return notificationsByTransactionId;
    }

    public void setNotificationsByTransactionId(Collection<Notification> notificationsByTransactionId) {
        this.notificationsByTransactionId = notificationsByTransactionId;
    }

    @ManyToOne
    @JoinColumn(name = "SUBSCRIBER_MSISDN", referencedColumnName = "SUBSCRIBER_MSISDN", nullable = false, insertable = false, updatable = false)
    public Subscriber getSubscriberBySubscriberMsisdn() {
        return subscriberBySubscriberMsisdn;
    }

    public void setSubscriberBySubscriberMsisdn(Subscriber subscriberBySubscriberMsisdn) {
        this.subscriberBySubscriberMsisdn = subscriberBySubscriberMsisdn;
    }

    @ManyToOne
    @JoinColumn(name = "PAYMENT_METHOD_CODE", referencedColumnName = "PAYMENT_METHOD_CODE", nullable = false, insertable = false, updatable = false)
    public PaymentMethod getPaymentMethodByPaymentMethodCode() {
        return paymentMethodByPaymentMethodCode;
    }

    public void setPaymentMethodByPaymentMethodCode(PaymentMethod paymentMethodByPaymentMethodCode) {
        this.paymentMethodByPaymentMethodCode = paymentMethodByPaymentMethodCode;
    }
}
