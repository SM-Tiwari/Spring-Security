package id.gnvsolution.d3.api.controller;

import id.gnvsolution.d3.api.dto.request.VersionDto;
import id.gnvsolution.d3.api.dto.response.VersionResponseDto;
import id.gnvsolution.d3.api.service.VersionService;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.gnv.vnm.selfcare.core.model.ServiceResult;
import com.gnv.vnm.selfcare.core.model.ServiceResult.StatusCode;

/**
 * <pre>
 *  id.gnvsolution.d3.api.controller.VersioningController 
 * </pre>
 *
 * @author edwin < edwinkun at gmail dot com >
 * Apr 28, 2017 2:40:42 PM
 *
 */
@CrossOrigin(origins = "*", allowedHeaders = "*")
@RestController
@RequestMapping("/api/v1/")
public class VersioningController {

	@Value("${timestamp}")
    private String timestamp;
    
    @Value("${scm}")
    private String scm;
    
    @Autowired
    private VersionService versionService;
    
    @RequestMapping(value = "/version", method = RequestMethod.GET)
    public Object getVersion() {
        Map map = new HashMap();
        
        // 1493365026548
        if(timestamp.length() == 13)
            timestamp = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date(Long.parseLong(timestamp)));
        
        map.put("buildDate", timestamp);
        map.put("sourceVersion", scm);
        
      //  return map;
       return new ServiceResult(StatusCode.SUCCESS, map, "Success");
    }
    
    @RequestMapping(value = "/current-version", method = RequestMethod.POST)
    public Object getCurrentVersion(@RequestBody VersionDto versionDto) throws Exception {
       // return versionService.getVersionResponseDto(versionDto);
        return new ServiceResult(StatusCode.SUCCESS, versionService.getVersionResponseDto(versionDto), "Success");
    }
    
}
