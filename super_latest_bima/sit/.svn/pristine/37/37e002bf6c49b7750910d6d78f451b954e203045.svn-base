package com.monitorjbl.json;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import javax.imageio.ImageIO;
import javax.xml.bind.DatatypeConverter;

public class ImageTest {
    public static void main(String[] args) {
        String base64String ="";
        String[] strings = base64String.split(",");
        String extension="jpg";
        switch (strings[0]) {//check image's extension
            case "data:image/jpeg;base64":
                extension = "jpeg";
                break;
            case "data:image/png;base64":
                extension = "png";
                break;
            default://should write cases for more images types
                extension = "jpg";
                break;
        }
        //convert base64 string to binary data
        byte[] data = DatatypeConverter.parseBase64Binary(strings[0]);
        String path = "F:/redis/test_image." + "png";
        File file = new File(path);
        try (OutputStream outputStream = new BufferedOutputStream(new FileOutputStream(file))) {
            outputStream.write(data);
            File file1 = new File(path);
           if(file1.exists()) System.out.println(isImage(file));
            /*JPEGImageDecoder decoder = new JPEGImageDecoder(new FileImageSource(file) ,new FileInputStream(file));
            decoder.produceImage();*/
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public static boolean isValidImage(File f) {
         boolean isValid = true;
         try {
           ImageIO.read(f).flush();
         } catch (Exception e) {
                e.printStackTrace();
           isValid = false;
         }
         return isValid;
       }
    
    public static boolean isImage(File file) {
        /*
        // Solution 1
        String mimeType = new MimetypesFileTypeMap().getContentType(file);
        log.info("MimeType Type = " + mimeType);
        String type = mimeType.split("/")[0].toLowerCase();
        log.info("File Type = " + type);
        return type.equals("image");
        */
        boolean b = false;
        try {
            b = (ImageIO.read(file) != null);
        } catch (IOException e) {
              e.printStackTrace();
           System.out.println("image not found");
        }
        return b;
    }
}

