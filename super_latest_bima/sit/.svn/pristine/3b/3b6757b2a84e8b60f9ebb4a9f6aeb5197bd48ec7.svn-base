package id.gnvsolution.d3.api.filter;

import net.sf.jsqlparser.parser.CCJSqlParserManager;
import net.sf.jsqlparser.statement.select.PlainSelect;
import net.sf.jsqlparser.statement.select.Select;
import org.junit.Test;

import java.io.StringReader;

import static org.junit.Assert.assertEquals;

/**
 * Created by Arie
 * on 16/04/2017.
 */
public class HibernateSessionFilterTest {
    private CCJSqlParserManager parserManager = new CCJSqlParserManager();

    @Test
    public void updateStatementTest() throws Exception {
        String statement = "SELECT * FROM mytable as mytable0, mytable1 alias_tab1, mytable2 as alias_tab2, (SELECT * FROM mytable3) AS mytable4 WHERE mytable.col = 9";
        String statementToString = "SELECT * FROM mytable AS mytable0, mytable1 alias_tab1, mytable2 AS alias_tab2, (SELECT * FROM mytable3) AS mytable4 WHERE mytable.col = 9";

        Select select = (Select) parserManager.parse(new StringReader(statement));
        PlainSelect plainSelect = (PlainSelect) select.getSelectBody();
        assertEquals(3, plainSelect.getJoins().size());
        assertEquals("mytable0", plainSelect.getFromItem().getAlias().getName());
        assertEquals("alias_tab1", plainSelect.getJoins().get(0).getRightItem().getAlias().getName());
        assertEquals("alias_tab2", plainSelect.getJoins().get(1).getRightItem().getAlias().getName());
        assertEquals("mytable4", plainSelect.getJoins().get(2).getRightItem().getAlias().getName());
    }
}