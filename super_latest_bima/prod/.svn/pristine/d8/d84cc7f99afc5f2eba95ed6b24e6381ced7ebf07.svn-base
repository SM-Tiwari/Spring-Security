package id.gnvsolution.d3.api.controller;

import id.gnvsolution.d3.api.dto.request.HomeScreenRequestDto;
import id.gnvsolution.d3.api.dto.request.PurchaseRequestDto;
import id.gnvsolution.d3.api.service.CustomerUiTypeService;
import id.gnvsolution.d3.api.service.ProductService;
import id.gnvsolution.d3.api.service.PurchasingService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.gnv.vnm.selfcare.core.model.ServiceResult;
import com.gnv.vnm.selfcare.core.model.ServiceResult.StatusCode;

import java.util.Map;

/**
 * <pre>
 *  id.gnvsolution.d3.api.controller.RecommendedForYouController 
 * </pre>
 *
 * @author edwin < edwinkun at gmail dot com >
 * May 26, 2017 1:14:09 PM
 *
 */
@CrossOrigin(origins = "*", allowedHeaders = "*")
@RestController
@RequestMapping("/api/v1/recommended")
public class RecommendedForYouController {
	 @Autowired
	    ProductService productService;
	    @Autowired
	    PurchasingService purchasingService;  
	    
	    @Autowired
	    private CustomerUiTypeService customerUiTypeService;
	    
	    @RequestMapping(value = "/all", method = RequestMethod.POST)
	    public Object all(@RequestBody HomeScreenRequestDto request) {
	    	return new ServiceResult(StatusCode.SUCCESS,  productService.getRecommendedForYou(request, request.getLanguage(), customerUiTypeService.isFull(request.getIsFull())), "Success");
	       // return productService.getRecommendedForYou(request, request.getLanguage(), customerUiTypeService.isFull(request.getIsFull()));
	    }
	    
	    @RequestMapping(value = "/", method = RequestMethod.POST)
	    public Object limit(@RequestBody HomeScreenRequestDto request) {
	    	return new ServiceResult(StatusCode.SUCCESS, productService.getRecommendedForYouLimited(request, request.getLanguage(), customerUiTypeService.isFull(request.getIsFull())), "Success");
	       // return productService.getRecommendedForYouLimited(request, request.getLanguage(), customerUiTypeService.isFull(request.getIsFull()));
	    }

	    @RequestMapping(value = "/redeem", method = RequestMethod.POST)
	    public Object redeem(@RequestBody PurchaseRequestDto purchaseRequestDto) {
	    	return new ServiceResult(StatusCode.SUCCESS, purchasingService.redeemCampaign(purchaseRequestDto), "Success");
	     //   return purchasingService.redeemCampaign(purchaseRequestDto);
	    }


}
