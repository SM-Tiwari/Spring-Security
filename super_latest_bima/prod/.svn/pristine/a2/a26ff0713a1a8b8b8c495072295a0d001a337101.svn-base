package id.gnvsolution.d3.api.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

import id.gnvsolution.d3.api.security.securityutil.TokenDetails;
import id.gnvsolution.d3.api.security.securityutil.TokenExtractor;
import id.gnvsolution.d3.api.service.AppConfigService;
import id.gnvsolution.d3.api.service.ProfileService;
import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.MalformedJwtException;
import io.jsonwebtoken.SignatureException;
import io.jsonwebtoken.UnsupportedJwtException;

/**
 * @author aswzen < aswzen at gmail dot com >
 * Sep 16, 2018 6:05:40 PM
 *
 */
@CrossOrigin(origins = "*", allowedHeaders = "*")
@Controller
@RequestMapping("/email")
public class EmailWebController extends BaseController {
	private final ProfileService profileService;

    @Autowired
    public EmailWebController(ProfileService profileService){
        this.profileService = profileService;
    }
    
    @Autowired
	private AppConfigService applicationConfigurationService;
    
    @Autowired
	private TokenExtractor tokenExtractor;
    
    @RequestMapping(value="/verifyemail", method = RequestMethod.GET)
    public ModelAndView verifyEmail(@RequestParam String token, @RequestParam String language) {
  
    	System.out.println("------------------"+language);
    	boolean flag=false;
        RedirectView redirectView = new RedirectView();
        flag=profileService.updateEmailStatusBasedOnToken(token);
        redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL", "http://103.129.188.37")+"/email/verifyemail?token="+token+"&lang="+language);
        flag=true;
        ModelAndView view=new ModelAndView();
        if(language!=null)
        {
        	if(Integer.parseInt(language)==0)
        	{
        		  view.setViewName("emailthankyouvi");
        	}
        	if(Integer.parseInt(language)==1)
        	{
        		  view.setViewName("emailthankyou");
        	}
        }
      
        view.addObject("result",flag);
        return view;	
    }
    
    @RequestMapping(value="/forgotpasswords", method = RequestMethod.GET)
    public RedirectView forgotPassword(@RequestParam String token, @RequestParam String lang) {
        RedirectView redirectView = new RedirectView();
       
		try {
			TokenDetails tokenDetails = getJwtTokenUtil().getUserDetailsFromToken(token);
			if (tokenDetails != null && profileService.getEmailidByToken(token)!=null) {
				redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL", "http://103.129.188.37")+"/resetPassword?token="+token+"&lang="+lang);
			}
			else {
	        	redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL", "http://103.129.188.37")+"/invalidToken");
	        }
		} catch (UnsupportedJwtException | MalformedJwtException | IllegalArgumentException | SignatureException ex) {
			redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL", "http://103.129.188.37")+"/invalidToken");

		} catch (ExpiredJwtException expiredEx) {
			redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL", "http://103.129.188.37")+"/invalidToken");

		} catch (Exception expiredEx) {
			redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL", "http://103.129.188.37")+"/invalidToken");
		}
		/*
		 * if(profileService.getEmailidByToken(token)!=null) {
		 * redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL",
		 * "http://103.129.188.37")+"/resetPassword?token="+token+"&lang="+lang); } else
		 * { redirectView.setUrl(applicationConfigurationService.get("SELFCARE_URL",
		 * "http://103.129.188.37")+"/invalidToken"); }
		 */
        return redirectView;
    }
   
}
