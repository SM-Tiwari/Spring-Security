package id.gnvsolution.d3.controller;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;

/**
 * <pre>
 *  id.gnvsolution.d3.controller.CallbackControllerTest
 * </pre>
 *
 * @author edwin < edwinkun at gmail dot com >
 * Apr 25, 2018 8:45:13 PM
 *
 */
@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration
@TestPropertySource(locations = "classpath:app-test.properties")
@ContextConfiguration(locations = {"classpath:mvc-dispatcher-servlet-test.xml", "classpath:applicationContext-test.xml"})
public class CallbackControllerTest {

    @Autowired
    private WebApplicationContext wac;

    private MockMvc mockMvc;

    @Before
    public void setup() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(this.wac).build();
    }

    @Test
    public void testFailed() throws Exception {
        MvcResult response = mockMvc.perform(post("/api/v1/callback/add"))
                .andExpect(status().is5xxServerError())
                .andReturn();
        Assert.assertEquals((Boolean) response.getResponse().getContentAsString().contains("false"), Boolean.TRUE);
    }

    @Test
    public void testSuccess() throws Exception {
        mockMvc.perform(post("/api/v1/callback/add")
                .contentType(MediaType.APPLICATION_JSON)
                .content("{\n"
                        + "  \"productName\": \"3DJungleRunTest\",\n"
                        + "  \"trxType\": \"DOWNLOAD\", \"channel\": \"TRIXOGOTEST\",\n"
                        + "  \"msisdn\": \"6289688023123\"\n"
                        + "}"))
                .andExpect(status().isOk())
                .andReturn();
    }
}
